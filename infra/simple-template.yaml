AWSTemplateFormatVersion: '2010-09-09'
Description: 'Serverless Contact Form - Simple Version'

Resources:
  ContactsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ContactsTable
      AttributeDefinitions:
        - AttributeName: messageId
          AttributeType: S
      KeySchema:
        - AttributeName: messageId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

  FormHandler:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: FormHandler
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref ContactsTable
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              console.log('Event:', JSON.stringify(event, null, 2));
              return {
                  statusCode: 200,
                  headers: {
                      'Access-Control-Allow-Origin': '*',
                      'Access-Control-Allow-Headers': 'Content-Type',
                      'Access-Control-Allow-Methods': 'POST, OPTIONS'
                  },
                  body: JSON.stringify({ message: 'Hello from Lambda!' })
              };
          };

Outputs:
  TableName:
    Description: DynamoDB table name
    Value: !Ref ContactsTable
  
  LambdaArn:
    Description: Lambda function ARN
    Value: !GetAtt FormHandler.Arn
